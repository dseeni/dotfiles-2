#!/bin/bash


alias lm='ls /mnt/'

fuse-umnt()
{
    command fusermount -u $@
}

cdm() {
    cd /mnt/
    if [[ $1 == "-d" ]]; then y="drive"
    elif [[ $1 == "-f" ]]; then y="ftp"
    elif [[ $1 == "-i" ]]; then y="ios"
    fi
    cd /mnt/$y$2 2> /dev/null
}

umnt()
{
    cd

    if [[ $1 == "-d" ]]; then
        shift 1
        for i in $@
        do
            x="drive$i"
            command udisksctl unmount -b "$(command cat /mnt/.$x)"
            unlink /mnt/$x
            rm /mnt/.$x
        done
    else
        if [[ $1 == "-i" ]]; then y="ios"
        elif [[ $1 == "-f" ]]; then y="ftp"
        fi

        shift 1

        for i in $@
        do
            x="$y$i"
            fusermount -u /mnt/$x
        done

        rmdir /mnt/* &> /dev/null
    fi

    cd - &> /dev/null
}


#-------------------------------------------------------------------------------
# DEVICES - except iOS
#-------------------------------------------------------------------------------

mnt()
{
    i=0
    for x1 in $@; do
        while [ true ]; do
            x2="drive$i"
            if [ -d /mnt/$x2 ]; then
                (( i++ ))
            else
                break
            fi
        done

        if [ "$(command udisksctl mount -b $x1 | true ; echo ${PIPESTATUS[0]})" = "0" ]; then
            MOUNT_LOCATION="$(command udisksctl info -b $x1 | command grep MountPoints | command cut -c25-)"
            echo "$x1 linked to /mnt/$x2"
            echo "    Mounted at "${MOUNT_LOCATION}""
            command ln -rs "${MOUNT_LOCATION}" /mnt/$x2
            echo "$x1" > /mnt/.$x2
        fi

    done
}


#-------------------------------------------------------------------------------
# iOS DEVICES
#-------------------------------------------------------------------------------

ios-mnt()
{
    plugged=$(ideviceinstaller -l 2> /dev/null)
    if [[ $plugged == "" ]]; then
        echo "No iOS device found, is it plugged in?"
    else
        echo
        echo -e "\e[4m0 | iOS\e[0m"
        echo

        i=1
        while read app
        do
            echo $i \| $( echo $app | cut -d "," -f 3 | tr -d '"')
            appid[$i]=$( echo $app | cut -d "," -f 1 )
            (( i++ ))
        done < <(ideviceinstaller -l | sed 1d)

        echo
        echo "* Type anthing else to abort *"
        echo

        read -r -p 'Choose index of app: ' option

        j=0
        while [ true ]
        do
            x="ios$j"
            if [ -d /mnt/$x ]; then
                (( j++ ))
            else
                break
            fi
        done

        re='^[0-9]+$'
        if [[ $option == '0' ]]; then
            mkdir /mnt/$x
            ifuse /mnt/$x
        elif [[ $option =~ $re ]] ; then
            if ! [ $option -ge $i ]; then
                mkdir /mnt/$x
                ifuse --appid ${appid[$option]} /mnt/$x
            fi
        fi
    fi
}


#-------------------------------------------------------------------------------
# FTP
#-------------------------------------------------------------------------------

ftp-mnt()
{
    i=0
    for x1 in $@
    do
        while [ true ]
        do
            x2="ftp$i"
            if [ -d /mnt/$x2 ]; then
                (( i++ ))
            else
                break
            fi
        done
        mkdir /mnt/$x2
        curlftpfs $1 /mnt/$x2
    done
}
